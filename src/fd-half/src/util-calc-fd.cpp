#include "Common.h"
#include "Fdsf.h"
#include "FdIndex.h"
#include "FullyConvergedSeries.h"
#include <iostream>
#include <map>
#define LOGGER_SUPPORTED

// Утилита вычисления функций ФД
namespace {

    const std::map<BmpReal, std::map<BmpReal, BmpReal>> OLD_VALUES = {
        {
            -50, {
                { -3.0/2, -6.8372401909141519e-22},
                { -1.0/2, 3.4186200954570755e-22},
                { 1.0/2, 1.7093100477285375e-22},
                { 3.0/2, 2.5639650715928064e-22},
                { 5.0/2, 6.4099126789820153e-22},
                { 7.0/2, 2.2434694376437055e-21},
            }
        },
        {
            -45, {
                { -3.0 / 2, -1.0147364162766731e-19 },
                { -1.0 / 2, 5.0736820813833648e-20 },
                { 1.0 / 2, 2.5368410406916821e-20 },
                { 3.0 / 2, 3.8052615610375231e-20 },
                { 5.0 / 2, 9.5131539025938063e-20 },
                { 7.0 / 2, 3.3296038659078328e-19 },
                }
        },
        {
            -40, {
                { -3.0 / 2, -1.5060023719604826e-17 },
                { -1.0 / 2, 7.530011859802413e-18 },
                { 1.0 / 2, 3.7650059299012057e-18 },
                { 3.0 / 2, 5.647508894851809e-18 },
                { 5.0 / 2, 1.4118772237129521e-17 },
                { 7.0 / 2, 4.9415702829953326e-17 }
                }
        },
        { -35, {
            { -3.0 / 2, -2.2351056963862867e-15},
            { -1.0 / 2, 1.1175528481931437e-15 },
            { 1.0 / 2, 5.5877642409657187e-16 },
            { 3.0 / 2, 8.38164636144858e-16 },
            { 5.0 / 2, 2.0954115903621447e-15 },
            { 7.0 / 2, 7.3339405662675071e-15 }
            }
        },
        {
             -30, {
            { -3.0 / 2, -3.3171909732880955e-13 },
            { -1.0 / 2, 1.6585954866441578e-13 },
            { 1.0 / 2, 8.2929774332210616e-14 },
            { 3.0 / 2, 1.2439466149831798e-13 },
            { 5.0 / 2, 3.1098665374579749e-13 },
            { 7.0 / 2, 1.0884532881102959e-12}
            }
        },
        {
            -25, {
            { -3.0 / 2, -4.9231479168263298e-11 },
            { -1.0 / 2, 2.4615739584373383e-11 },
            { 1.0 / 2, 1.2307869792247123e-11 },
            { 3.0 / 2, 1.8461804688416006e-11 },
            { 5.0 / 2, 4.615451172109668e-11 },
            { 7.0 / 2, 1.6154079102393751e-10 }
            }
        },
        { -20, {
            { -3.0 / 2, -7.3065993295000633e-09 },
            { -1.0 / 2, 3.653299670074554e-09 },
            { 1.0 / 2, 1.8266498363684075e-09 },
            { 3.0 / 2, 2.7399747555509587e-09 },
            { 5.0 / 2, 6.849936890125332e-09 },
            { 7.0 / 2, 2.3974779117622546e-08}
            }
        },
        { -15, {
            { -3.0 / 2, -1.0843950228273186e-06 },
            { -1.0 / 2, 5.4219762869401237e-07 },
            { 1.0 / 2, 2.7109884366709919e-07 },
            { 3.0 / 2, 4.0664828749072111e-07 },
            { 5.0 / 2, 1.0166207462143951e-06 },
            { 7.0 / 2, 3.558172659853673e-06 }
            }
        },
        { -10, {
            { -3.0 / 2, -0.00016092822815933993 },
            { -1.0 / 2, 8.046669716113733e-05 },
            { 1.0 / 2, 4.0233994366893932e-05 },
            { 3.0 / 2, 6.0351475898064254e-05 },
            { 5.0 / 2, 0.00015087929518646439 },
            { 7.0 / 2, 0.00052807859268266496 }
            }
        },
        { -9, {
            { -3.0 / 2, -0.00043740002472874857 },
            { -1.0 / 2, 0.00021871909646717193 },
            { 1.0 / 2, 0.00010936431957977027 },
            { 3.0 / 2, 0.00016405005803954577 },
            { 5.0 / 2, 0.00041012961856977669 },
            { 7.0 / 2, 0.0014354614937241283}
            }
        },
        {
            -8, {
                { -3.0 / 2, -0.0011886201173217066 },
                { -1.0 / 2, 0.00059445102335601056 },
                { 1.0 / 2, 0.00029726075928624785 },
                { 3.0 / 2, 0.00044591757785330605 },
                { 5.0 / 2, 0.001114826995969972 },
                { 7.0 / 2, 0.0039019523288631795}
            }
        },
        { -7, {
            { -3.0 / 2, -0.0032283733868046132 },
            { -1.0 / 2, 0.0016152273100505439 },
            { 1.0 / 2, 0.00080787393828178438 },
            { 3.0 / 2, 0.0012120061844409511 },
            { 5.0 / 2, 0.0030302596112063854 },
            { 7.0 / 2, 0.010606335964723077 }
            }
        },
        { -6, {
            { -3.0 / 2, -0.0087562384136849296 },
            { -1.0 / 2, 0.0043857887646304057 },
            { 1.0 / 2, 0.0021948143568012949 },
            { 3.0 / 2, 0.0032936628101454617 },
            { 5.0 / 2, 0.0082359596984179061 },
            { 7.0 / 2, 0.028829014882432807 }
            }
        },
        { -5, {
            { -3.0 / 2, -0.023659662440401907 },
            { -1.0 / 2, 0.011886110954227806 },
            { 1.0 / 2, 0.0059571769051784762 },
            { 3.0 / 2, 0.0089463822604122466 },
            { 5.0 / 2, 0.022379248358526813 },
            { 7.0 / 2, 0.078350656715051301 }
            }
        },
        { -4, {
            { -3.0 / 2, -0.063282432526496304 },
            { -1.0 / 2, 0.032049374037882834 },
            { 1.0 / 2, 0.016127737943983776 },
            { 3.0 / 2, 0.024269405334868585 },
            { 5.0 / 2, 0.060771189374500739 },
            { 7.0 / 2, 0.21287059771474814 }
            }
        },
        { -3, {
            { -3.0 / 2, -0.16478041077300673 },
            { -1.0 / 2, 0.08525970123326887 },
            { 1.0 / 2, 0.043366367550415556 },
            { 3.0 / 2, 0.065611738806375441 },
            { 5.0 / 2, 0.16474039373220511 },
            { 7.0 / 2, 0.57784553750874812 }
            }
        },
        { -2, {
            { -3.0 / 2, -0.40108449328644835 },
            { -1.0 / 2, 0.21919160758617975 },
            { 1.0 / 2, 0.11458782392526308 },
            { 3.0 / 2, 0.17580098885401291 },
            { 5.0 / 2, 0.44455445345876299 },
            { 7.0 / 2, 1.5649662632360704 }
            }
        },
        { -1, {
            { -3.0 / 2, -0.83948441529323437 },
            { -1.0 / 2, 0.52115038310799133 },
            { 1.0 / 2, 0.29050089616991753 },
            { 3.0 / 2, 0.46084880629010166 },
            { 5.0 / 2, 1.1859681754434674 },
            { 7.0 / 2, 4.2132640719263588 }
            }
        },
        {
            0, {
            { -3.0 / 2, -1.3474364777155079 },
            { -1.0 / 2, 1.0721549299401913 },
            { 1.0 / 2, 0.67809389515310081 },
            { 3.0 / 2, 1.1528038370883613 },
            { 5.0 / 2, 3.0825860828374179 },
            { 7.0 / 2, 11.183716751693318 }
        }
        }
    };

    const std::map<BmpReal, std::map<BmpReal, BmpReal>> OLD_INT_VALUES = {
        { -50,{
            { 0, 1.9287498479639181e-22 },
            { 1, 1.9287498479639181e-22 },
            { 2, 3.8574996959278361e-22 },
            { 3, 1.1572499087783508e-21 },
            { 4, 4.6289996351134033e-21 },
        } },
        { -45,{
            { 0, 2.8625185805493937e-20 },
            { 1, 2.8625185805493937e-20 },
            { 2, 5.7250371610987873e-20 },
            { 3, 1.7175111483296363e-19 },
            { 4, 6.8700445933185453e-19 },
        } },
        { -40,{
            { 0, 4.2483542552915889e-18 },
            { 1, 4.2483542552915889e-18 },
            { 2, 8.4967085105831777e-18 },
            { 3, 2.5490125531749533e-17 },
            { 4, 1.0196050212699813e-16 },
        } },
        { -35,{
            { 0, 6.3051167601469872e-16 },
            { 1, 6.3051167601469882e-16 },
            { 2, 1.2610233520293976e-15 },
            { 3, 3.7830700560881927e-15 },
            { 4, 1.5132280224352771e-14 },
        } },
        { -30,{
            { 0, 9.3576229688397356e-14 },
            { 1, 9.3576229688399539e-14 },
            { 2, 1.8715245937680127e-13 },
            { 3, 5.6145737813040708e-13 },
            { 4, 2.2458295125216352e-12 },
        } },
        { -25,{
            { 0, 1.3887943864867582e-11 },
            { 1, 1.3887943864915799e-11 },
            { 2, 2.7775887729879823e-11 },
            { 3, 8.3327663189711792e-11 },
            { 4, 3.3331065275899182e-10 },
        } },
        { -20,{
            { 0, 2.0611536203143808e-09 },
            { 1, 2.0611536213764695e-09 },
            { 2, 4.1223072438150274e-09 },
            { 3, 1.2366921733038215e-08 },
            { 4, 4.9467686935339126e-08 },
        } },
        { -15,{
            { 0, 3.0590227371372049e-07 },
            { 1, 3.0590229710777152e-07 },
            { 2, 6.118046176095963e-07 },
            { 3, 1.8354138879198707e-06 },
            { 4, 7.3416556218616496e-06 },
        } },
        { -10,{
            { 0, 4.539889921686464e-05 },
            { 1, 4.5399414484476326e-05 },
            { 2, 9.0799344243495521e-05 },
            { 3, 0.00027239880564923209 },
            { 4, 0.0010895967684436615 },
        } },
        { -9,{
            { 0, 0.00012340218972325883 },
            { 1, 0.00012340599680056542 },
            { 2, 0.00024681580081764007 },
            { 3, 0.00074045311341689195 },
            { 4, 0.0029618238757811279 },
        } },
        { -8,{
            { 0, 0.00033540637289576885 },
            { 1, 0.00033543449830263463 },
            { 2, 0.0006708971248073442 },
            { 3, 0.0020127335695206503 },
            { 4, 0.0080510186720074775 },
        } },
        { -7,{
            { 0, 0.00091146645377424462 },
            { 1, 0.00091167416758222198 },
            { 2, 0.0018235561050747736 },
            { 3, 0.0054709800262083483 },
            { 4, 0.021884543601642346 },
        } },
        { -6,{
            { 0, 0.0024756851377304499 },
            { 1, 0.0024772178134422761 },
            { 2, 0.0049559694272127983 },
            { 3, 0.014870210107628399 },
            { 4, 0.059485445584039065 },
        } },
        { -5,{
            { 0, 0.0067153484891180693 },
            { 1, 0.0067266308775223976 },
            { 2, 0.013464566610971755 },
            { 3, 0.040410679632107621 },
            { 4, 0.1616767081951023 },
        } },
        { -4,{
            { 0, 0.018149927917809741 },
            { 1, 0.018232448969983026 },
            { 2, 0.0365478637632424 },
            { 3, 0.10976848735585347 },
            { 4, 0.43932434057265235 },
        } },
        { -3,{
            { 0, 0.048587351573742055 },
            { 1, 0.04918072033882423 },
            { 2, 0.098963402909592255 },
            { 3, 0.29780187847092043 },
            { 4, 1.1930426236172633 },
        } },
        { -2,{
            { 0, 0.12692801104297249 },
            { 1, 0.13101248471442378 },
            { 2, 0.26626545877130059 },
            { 3, 0.80531949302320815 },
            { 4, 3.2345473519551629 },
        } },
        { -1,{
            { 0, 0.31326168751822281 },
            { 1, 0.33864799640345222 },
            { 2, 0.70512975859561555 },
            { 3, 2.159839661017986 },
            { 4, 8.7321382889059436 },
        } },
        { 0,{
            { 0, 0.69314718055994518 },
            { 1, 0.82246703342411309 },
            { 2, 1.8030853547393912 },
            { 3, 5.6821969769834748 },
            { 4, 23.330874490725822 },
        } }
    };

    const std::map<BmpReal, BmpReal> OLD_JM2_VALUE = {
        { -50, 5.8434816785314707e-44 },
        { -45, 1.2871124931475314e-39 },
        { -40, 2.8350539304382489e-35 },
        { -35, 6.24462184252304e-31 },
        { -30, 1.3754694941582456e-26 },
        { -25, 3.0296731764482672e-22 },
        { -20, 6.6732992461674462e-18 },
        { -15, 1.4698915547708522e-13 },
        { -10, 3.2375139618626505e-09 },
        { -9, 2.3920413032730578e-08 },
        { -8, 1.7671394726820056e-07 },
        { -7, 1.3050402078561303e-06 },
        { -6, 9.6288001449712102e-06 },
        { -5, 7.0863676423577512e-05 },
        { -4, 0.0005179880606690717 },
        { -3, 0.0037185003521270281 },
        { -2, 0.025488904217813021 },
        { -1, 0.1568531760159442 },
        { 0, 0.78323866983319212 },
    };


    void calcFdPackage(BmpReal x) {
        std::cout << " -3.0/2, " << fdsf::fd_m3half(x)/OLD_VALUES.at(x).at(-3.0/2) << " ";
        std::cout << " -1.0/2, " << fdsf::fd_m1half(x)/OLD_VALUES.at(x).at(-1.0 / 2) << " ";
        std::cout << " 1.0/2, " << fdsf::fd_1half(x)/OLD_VALUES.at(x).at(1.0 / 2) << " ";
        std::cout << " 3.0/2, " << fdsf::fd_3half(x)/OLD_VALUES.at(x).at(3.0 / 2) << " ";
        std::cout << " 5.0/2, " << fdsf::fd_5half(x)/ OLD_VALUES.at(x).at(5.0 / 2) << " ";
        std::cout << " 7.0/2, " << fdsf::fd_7half(x)/ OLD_VALUES.at(x).at(7.0 / 2) << std::endl;
    }

    void calcFdIntPackageOld(BmpReal x) {
        std::cout << "{ 0, " << fdsf::fd_0(x) << "}," << std::endl;
        std::cout << "{ 1, " << fdsf::fd_1(x) << "}," << std::endl;
        std::cout << "{ 2, " << fdsf::fd_2(x) << "}," << std::endl;
        std::cout << "{ 3, " << fdsf::fd_3(x) << "}," << std::endl;
        std::cout << "{ 4, " << fdsf::fd_4(x) << "}," << std::endl;
    }

    void calcFdIntPackage(BmpReal x) {
        std::cout << "{ 0, " << fdsf::fd_0(x) / OLD_INT_VALUES.at(x).at(0) << "}," << std::endl;
        std::cout << "{ 1, " << fdsf::fd_1(x) / OLD_INT_VALUES.at(x).at(1) << "}," << std::endl;
        std::cout << "{ 2, " << fdsf::fd_2(x) / OLD_INT_VALUES.at(x).at(2) << "}," << std::endl;
        std::cout << "{ 3, " << fdsf::fd_3(x) / OLD_INT_VALUES.at(x).at(3) << "}," << std::endl;
        std::cout << "{ 4, " << fdsf::fd_4(x) / OLD_INT_VALUES.at(x).at(4) << "}," << std::endl;
    }

    void calcJmOld(BmpReal x) {
        std::cout << "{ " << x << ", " << fcs::calculateJmhalf(x) << " }," << std::endl;
    }

    void calcJm(BmpReal x) {
        std::cout << "{ " << x << ", " << fcs::calculateJmhalf(x) / OLD_JM2_VALUE.at(x) << " }," << std::endl;
    }

    void testCalcFd() {
        setPreciseOutput();
        for (auto x : {-50, -45, -40, -35, -30, -25, -20, -15, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0}) {
           // std::cout << " {  " << x << ", {" << std::endl;
            //calcFdPackage(x);
            //calcFdIntPackage(x);
            calcJm(x);
            //std::cout << "} }"<< std::endl;
        }
    }
}

TEST_CASE("calc") {
    testCalcFd();
}
