%% В этом файле значения z и I правильно аппроксимируются, т.е 
% z = (Ik/(k!*y))^(1/k)
%
clc 
clear all 
close all
format long

% коэффициент k функции Ферми-Дирака
k = 1/2;

N = 8;
baseSize = 2*N;
x_star = 3;
y_star = log(1+exp(x_star));

y_star_inv = 1/y_star^(3/2);

a = zeros(1,N); b = zeros(1,N);

% задаем лин-триг сетку 
j = 1:baseSize;
alpha = 2/(2+pi);
% y0 = 0.5*y_star*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
y0_inv = 0.5*y_star_inv*(2*alpha*j/baseSize + (1-alpha)*(1 - cos(pi*j/baseSize)));
y0 = 1./(y0_inv(end:-1:1)).^(2/3);
x0 = log(exp(y0)-1);

Y = [3.04858735157374472
3.05417660536807523
3.05979154803888731
3.06543236901923555
3.07109925966824182
3.07679241329609265
3.08251202518942513
3.08825829263711737
3.09403141495649159
3.09983159351992921
3.10565903178191594
3.11151393530652065
3.11964815903762505
3.12783575397771818
3.13607728263808472
3.14437331571424661
3.15272443223811871
3.16113121973361144
3.16959427437577856
3.17811420115359722
3.18669161403648138
3.19532713614463626
3.20402139992334778
3.21506199785124824
3.22619820080224828
3.23743134030789514
3.24876277353273535
3.26019388390566256
3.27172608177024848
3.28336080505473271
3.29509951996237049
3.30694372168287787
3.31889493512572509
3.33095471567608481
3.34539792070276665
3.35999871725631705
3.37475987466977889
3.38968422963465343
3.40477468830001051
3.42003422845156768
3.43546590177434297
3.45107283620268035
3.46685823836164442
3.48282539610398789
3.49897768114713292
3.51751029376632252
3.53629027072907975
3.55532293741255767
3.57461377811718606
3.59416844215235987
3.61399275020745536
3.63409270102402537
3.65447447838608719
3.67514445844647542
3.69610921740843645
3.71737553958291844
3.74095932981435864
3.76492076576131218
3.78926961685793318
3.81401600344516334
3.83917041297114148
3.86474371710889297
3.89074718985300860
3.91719252666186346
3.94409186471717765
3.97145780437843365
3.99930343191594195
4.02930861521552597
4.05988299866013058
4.09104405763682788
4.12281001384745238
4.15519987635190269
4.18823348538498141
4.22193155916992779
4.25631574397270906
4.29140866766427376
4.32723399708361889
4.36381649952301220
4.40224220216470119
4.44152512784150044
4.48169628931232733
4.52278826329118822
4.56483529222669748
4.60787339423835629
4.65194048198973054
4.69707649136562466
4.74332352091859821
4.79072598316110732
4.83933076890510616
4.88918742599336298
4.94034835392852489
4.99286901609006328
5.04680817143925697
5.10222812785229962
5.15919501949646708
5.21777911097959812
5.27805513136591387
5.34010264156935310
5.40400643911883449
5.46985700484964532
5.53586977847676120
5.60391097278397510
5.67408218783228957
5.74649215503684641
5.82125738667450499
5.89850289865393762
5.97836301646793622
6.06098227582420357
6.14651643131686143
6.23513358871647227
6.32701547909658668
6.41701720578769930
6.51028944317322100
6.60702658395093412
6.70743927042699983
6.81175616366039360
6.92022595208422420
7.03311963867471146
7.15073315325325964
7.27339034569757015
7.40144642713205148
7.53529194011771963
7.66326019461627528
7.79680363216727645
7.93632132198607110
8.08225269466609397
8.23508288507074404
8.39534895915019597
8.56364720190388695
8.74064168583861445
8.92707439308560602
9.12377723357099057
9.33168639137886302
9.52529837145470815
9.72927578674064009
9.94453603067847958
10.17211197469950257
10.41317112685961277
10.66903879257639431
10.94122625869556664
11.23146533373298617
11.54175100070802173
11.87439452130763407
12.23209014056738475
12.55552816807364103
12.90123096687670312
13.27175657054192115
13.67008533849378082
14.09971288687724922
14.56476908090591671
15.07017213549712942
15.62183068120013552
16.22691238229657174
16.89420648896343380
17.63462151493513019
18.28320071217346054
18.99490273565452725
19.78016774914691922
20.65196749370974061
21.62664201723342572
22.72509787365400769
23.97456670324190497
25.41126033736577483
27.08451344585015619
29.06350213698848606
31.44865607538630314
33.51175825723549906
35.95027428536771197
38.88695073037878558
42.50746323147149752
47.10818597641340943
53.19660031083963503
61.72918649723882822
74.77958397527221734
97.98897558285808884
155.54780292151514232
]';

X = log(exp(Y)-1); 

I_base = [3.97698535404797671
4.08601973555874132
4.24820738426764422
4.47440406416418757
4.78026107971192360
5.18864051935195469
5.73359263923347129
6.46719053417252354
7.47184943859957507
8.88383951908684644
10.94148976809960594
14.09362830073298767
19.27621605112203795
28.75727885416462826
49.56582872854519195
117.72094930104992727
]';

C1 = (k+1)*k*(pi^2)/6;
z = ((I_base*(k+1)./(y0.^(k+1)) - 1).*(y0.^2))/C1;

I_add = [3.97698535404798204
3.98662754509385309
3.99632239396602529
4.00607033975170168
4.01587182644101048
4.02572730299555026
4.03563722341806752
4.04560204682334934
4.05562223751026707
4.06569826503507326
4.07583060428594113
4.08601973555874665
4.10019053459673533
4.11447195284014811
4.12886530935766505
4.14337194429910038
4.15799321931769494
4.17273051800252759
4.18758524632143825
4.20255883307466149
4.21765273035955168
4.23286841404668568
4.24820738426764688
4.26771449704625283
4.28742291377671414
4.30733580851198106
4.32745642243591533
4.34778806564471232
4.36833411898528290
4.38909803595265569
4.41008334464871776
4.43129364980452500
4.45273263486867510
4.47440406416419290
4.50040828286007066
4.52675132370718547
4.55343993208386788
4.58048103364383596
4.60788174036840648
4.63564935686372781
4.66379138691467077
4.69231554030772191
4.72122973993574035
4.75054212919828078
4.78026107971193248
4.81444219157590236
4.84916939617183296
4.88445602153103398
4.92031583272477402
4.95676304988965288
4.99381236715092935
5.03147897249639442
5.06977856865684373
5.10872739505315909
5.14834225087389186
5.18864051935196091
5.23346377354056980
5.27914834652333109
5.32571951284968748
5.37320354444549686
5.42162776019093773
5.47102057848040069
5.52141157297531482
5.57283153177847179
5.62531252027696826
5.67888794792164653
5.73359263923347218
5.79275413011025897
5.85326592209638719
5.91517505695428447
5.97853078283049655
6.04338468484438796
6.10979082504835525
6.17780589255275547
6.24748936468684768
6.31890368015307935
6.39211442522829199
6.46719053417253065
6.54639432121388776
6.62772923524587743
6.71128276776536836
6.79714725325722924
6.88542020823057221
6.97620469910372254
7.06960974184146362
7.16575073658664596
7.26474994091243698
7.36673698575719449
7.47184943859957684
7.58023341899629166
7.69204427224981746
7.80744730771058215
7.92661860906387350
8.04974592492231444
8.17702964916298214
8.30868390173731974
8.44493772217369987
8.58603638972085470
8.73224288608916055
8.88383951908684644
9.03675802380945470
9.19536367517278919
9.35997938721059874
9.53095291985185611
9.70865931195738341
9.89350360585182997
10.08592390492533397
10.28639481279768297
10.49543131077894387
10.71359314021185050
10.94148976809960594
11.16638667009366870
11.40118085979386109
11.64653863051000826
11.90318731072445502
12.17192241121516183
12.45361580049778460
12.74922508545671640
13.05980440968165723
13.38651692596219078
13.73064925381991053
14.09362830073298767
14.44378334118685991
14.81241095391554197
15.20100784619510392
15.61123665596370813
16.04494959618519800
16.50421626108417783
16.99135647477354638
17.50897928232816625
18.06002946644542817
18.64784334059692483
19.27621605112203085
19.86783793127304065
20.49779739093782638
21.16993557723172614
21.88862414943279688
22.65886013825942058
23.48638191348021920
24.37781195060197348
25.34083391092845616
26.38441405763057546
27.51908052178925601
28.75727885416462826
29.89278651985833690
31.12291332320496551
32.45998004651015378
33.91854308828451536
35.51592559476460309
37.27290755990846804
39.21463331621460924
41.37182073606941657
43.78239603286781545
46.49373981267140721
49.56582872854522748
52.31078250310292788
55.37967916986128358
58.83341290867017648
62.74915859335749957
67.22620228788250074
72.39447064462196124
78.42733855855149727
85.56144702056404583
94.12845697250490673
104.60806194262184476
117.72094930104992727
129.47375977474433739
143.83901368759373440
161.79643456378312294
184.88560147527198296
215.67250128051466618
258.77594787801518805
323.43364079012980028
431.20037117505029300
646.74096330302893421
1293.38168693217812688
]';

I = ((I_add*(k+1)./(Y.^(k+1)) - 1).*(Y.^2))/C1;

% Задаем матрицы A и B
B = z(1,:) - ones(1,baseSize);
A = zeros(baseSize,baseSize);
for i = 1:size(A,2)
    for j = 1:size(A,2)
        if (j > 0 && j < N + 1)
            A(i,j) = y0(i)^(-2*j);
        elseif (j >= N+1 && j <= baseSize)
            A(i,j) = -z(i)*y0(i)^(-2*(j-N));
        end
    end
end
disp('A matrix: ')
disp(A); 
disp('B matrix: ')
disp(B');
E = A\B';
% disp(E);

for j = 1:length(E)
    if (j > 0 && j < N + 1)
        a(j) = E(j);
    elseif (j > N && j <= baseSize)
        b(j-N) = E(j);
    end
end
disp('lg(cond(A)):'); disp(log10(cond(A)));
disp('--------------------------------');
disp('Коэффициенты а:'); disp(a');
disp('----------------------------');
disp('Коэффициенты b:'); disp(b');
disp('----------------------------');

F_base = zeros(1,baseSize);
delta_base = zeros(1,baseSize);
for j = 1:baseSize
    S1 = 0; S2 = 0; 
    for n = 1:N
        S1 = S1 + a(n).*y0(j).^(-2*n);
    end
    for m = 1:N
        S2 = S2 + b(m).*y0(j).^(-2*m);
    end
    F_base(j) = (1 + S1)/(1 + S2);
    delta_base(j) = F_base(j)/z(j)-1;
end
%---------------------------------------
% Добавим вспомогательную сетку

F = zeros(1,length(Y));
delta_additional = zeros(1,length(Y));
for j = 1:length(Y)
    S1 = 0; S2 = 0; 
    for n = 1:N
        S1 = S1 + a(n).*Y(j).^(-2*n);
    end
    for m = 1:N
        S2 = S2 + b(m).*Y(j).^(-2*m);
    end
    F(j) = (1 + S1)/(1 + S2);
    delta_additional(j) = F(j)/I(j)-1;
end

disp('lg(dc):');disp(log10(max(abs(delta_additional))));
disp('-------------------');
disp('Экстремумы:');
disp(max(abs(delta_additional(1:11))));
disp(max(abs(delta_additional(11:22))));
disp(max(abs(delta_additional(22:33))));
disp(max(abs(delta_additional(33:44))));
disp(max(abs(delta_additional(44:55))));
disp(max(abs(delta_additional(55:66))));
disp(max(abs(delta_additional(66:77))));
disp(max(abs(delta_additional(77:88))));
disp(max(abs(delta_additional(88:99))));
disp(max(abs(delta_additional(99:110))));
disp(max(abs(delta_additional(110:121))));
disp(max(abs(delta_additional(121:132))));
disp(max(abs(delta_additional(132:143))));
disp(max(abs(delta_additional(143:154))));
disp(max(abs(delta_additional(154:165))));
disp(max(abs(delta_additional(165:176))));


grid on, hold on
xlabel('y'); %ylabel('d*10^1^0');
plot(Y,delta_additional, 'k','linewidth', 2.5);
plot(y0,delta_base, 'k*','linewidth',5)
% axis([0 y_star -1.5*10^(-1) 1.5*10^(-1)])
% line([0;y_star],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;log(1+exp(x_star))],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;0],[-1.25; 1.35],'linewidth', 3, 'color', 'black');
% title({'Линейно-тригонометрическая сетка';['k = ', num2str(k), ', N = ', num2str(N), ', x_d_i_v = ', num2str(x_div)]})
% plot(log(1+exp(x_div)),2*10^-16,'b*');