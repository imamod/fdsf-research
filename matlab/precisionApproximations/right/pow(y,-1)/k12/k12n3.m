%% В этом файле значения z и I правильно аппроксимируются, т.е 
% z = (Ik/(k!*y))^(1/k)
%
clc 
clear all 
close all
format long

% коэффициент k функции Ферми-Дирака
k = 1/2;

N = 3;
% x_star = 2;
x_star = 3;
y_star = log(1+exp(x_star));

y_star_inv = 1/y_star;

a_last = 1; b_last = 1;
a = zeros(1,N+1); b = zeros(1,N);

link_coefficient = (k+1)*(pi^2)/3;

% задаем лин-триг сетку
baseSize = 2*N;
j = 1:baseSize;
alpha = 2/(2+pi);
% y0 = 0.5*y_star*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
y0_inv = 0.5*y_star_inv*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
y0 = 1./(y0_inv(end:-1:1));
x0 = log(exp(y0)-1);

Y = [3.04858735157374205
3.07818296999864005
3.10835884879347191
3.13913222203880427
3.17052101312284185
3.20254386955210979
3.23522019989322462
3.26857021299953621
3.30261495968922736
3.33737637705549073
3.37287733560477321
3.40914168943593365
3.47148550934207911
3.53615199827815063
3.60327341937602519
3.67299227227506941
3.74546230297998228
3.82084963567499747
3.89933404403025641
3.98111038247823190
4.06639020144736740
4.15540357474072319
4.24840117229413750
4.36882916658884923
4.49628380625380775
4.63139855000483802
4.77488535808874293
4.92754724147628664
5.09029329788877938
5.26415682923846084
5.45031730327574682
5.65012714594965715
5.86514465132243945
6.09717470314748766
6.34831956046743429
6.62104273367753127
6.91825006431512968
7.24339366835486764
7.60060663571671302
7.99487965409727508
8.43229561347322942
8.92034568218679880
9.46836189072555001
10.08811960579876299
10.79469318872368788
11.44554128633125423
12.17990864953375585
13.01497373793563561
13.97297286207102651
15.08320956673407842
16.38510464412541623
17.93297492132030513
19.80380328298993931
22.11043874501560325
25.02523744912888048
28.82524253004407910
31.70776678304848772
35.23085198116498873
39.63470847881061587
45.29680969006927427
52.84627797174749020
63.41553356609698966
79.26941695762123175
105.69255594349498040
158.53883391524246349
317.07766783048492698
]';

X = log(exp(Y)-1); 

I_base = [3.97698535404797671
4.61582217493119806
6.23142424711528786
10.37466055155188727
23.89649089375049940
103.32685929665119318
]';

z = (I_base*(k+1)./y0).^(2/k);

I_add = [3.97698535404797671
4.02813581411227961
4.08052789802146343
4.13420513634865028
4.18921304411703321
4.24559923207662404
4.30341352539965882
4.36270809036932850
4.42353756968756073
4.48595922708348471
4.55003310196593258
4.61582217493119806
4.72971769807792253
4.84891337788547183
4.97376675634818444
5.10466693913544134
5.24203805201872797
5.38634315182749290
5.53808866217171047
5.69782941672409926
5.86617440797414691
6.04379335764166203
6.23142424711529230
6.47750271477453676
6.74171863348368472
7.02601230823647249
7.33259785379414808
7.66401171979946838
8.02317169799883523
8.41344911494387659
8.83875773283006794
9.30366398844775055
9.81352471181170571
10.37466055155188904
10.99457624441340364
11.68224297725212146
12.44846397390099746
13.30635298101686814
14.27196791873888948
15.36516083624038664
16.61073412358786072
18.04003779845543676
19.69321411053498494
21.62241221068801522
23.89649089375051005
26.05929284902501308
28.57549115264122719
31.53132592826259639
35.04210794404441742
39.26516251976349281
44.42018163955792431
50.82234672246983109
58.93845144514211398
69.48664480446890934
83.62419301700494145
103.32685929665117897
119.17640466486942330
139.54851310959838884
166.48049835373436167
203.36271290923576771
256.22542185939954607
336.77159648383576496
470.60063351162091294
724.47483665811432729
1330.86360100304705156
3764.11213638242452362
]';


I = (I_add*(k+1)./Y).^(2/k);

% Задаем матрицы A и B
B = (z(1,:) - ones(1,baseSize).*(y0.^2)).*y0.^(2*N) + link_coefficient*y0.^(2*N);
A = zeros(baseSize,baseSize);
for i = 1:size(A,2)
    for j = 1:size(A,2)
        if (j > 0 && j < N + 1)
            A(i,j) = (y0(i))^(2*(j-1));
        elseif (j >= N+1 && j <=baseSize-1)
            A(i,j) = -z(i)*y0(i)^(2*(j-N-1));
        elseif (j == baseSize)
            A(i,j) = -z(i)*y0(i)^(2*N-2) + (y0(i)^(2*N));
        end
    end
end
disp(A); 
disp(B');
E = A\B';
disp(E);

for j = 1:length(E)
    if (j > 0 && j <= N)
        a(j) = E(j);
    elseif (j >= N+1 && j <= baseSize)
        b(j-N) = E(j);
    end
end
a(N+1) = b(N) - link_coefficient;
% disp('lg(cond(A)):'); disp(log10(cond(A)));
disp('--------------------------------');
disp('Коэффициенты а:'); disp(a');
disp('----------------------------');
disp('Коэффициенты b:'); disp(b');
disp('----------------------------');

F_base = zeros(1,baseSize);
delta_base = zeros(1,baseSize);
for j = 1:baseSize
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*y0(j).^(2*(n-1));
    end
    for m = 1:N
        S2 = S2 + b(m).*y0(j).^(2*(m-1));
    end
    F_base(j) = (y0(j).^(2*N+2) + S1)/(y0(j).^(2*N) + S2);
    delta_base(j) = F_base(j)/z(j)-1;
end
%---------------------------------------
% Добавим вспомогательную сетку

F = zeros(1,length(Y));
delta_additional = zeros(1,length(Y));
for j = 1:length(Y)
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*Y(j).^(2*(n-1));
    end
    for m = 1:N
        S2 = S2 + b(m).*Y(j).^(2*(m-1));
    end
    F(j) = (Y(j).^(2*N+2) + S1)/(Y(j).^(2*N) + S2);
    delta_additional(j) = F(j)/I(j)-1;
%     delta_additional(j) = I(j)/F(j)-1;
end

disp('lg(dc):');disp(log10(max(abs(delta_additional))));

disp('-------------------');
disp('Экстремумы:');
disp(max(abs(delta_additional(1:11))));
disp(max(abs(delta_additional(11:22))));
disp(max(abs(delta_additional(22:33))));
disp(max(abs(delta_additional(33:44))));
disp(max(abs(delta_additional(44:55))));
disp(max(abs(delta_additional(55:66))));
disp('-------------------');

grid on, hold on
xlabel('y'); %ylabel('d*10^1^0');
plot(Y,delta_additional, 'k','linewidth', 2.5);
plot(y0,delta_base, 'k*','linewidth',5)
% axis([0 y_star -1.5*10^(-1) 1.5*10^(-1)])
% line([0;y_star],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;log(1+exp(x_star))],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;0],[-1.25; 1.35],'linewidth', 3, 'color', 'black');
% title({'Линейно-тригонометрическая сетка';['k = ', num2str(k), ', N = ', num2str(N), ', x_d_i_v = ', num2str(x_div)]})
% plot(log(1+exp(x_div)),2*10^-16,'b*');