%% В этом файле значения z и I правильно аппроксимируются, т.е 
% z = (Ik/(k!*y))^(1/k)
%
clc 
clear all 
close all
format long

% коэффициент k функции Ферми-Дирака
k = 1/2;

N = 2;
% x_star = 2;
x_star = 3;
y_star = log(1+exp(x_star));

y_star_inv = 1/y_star;

a_last = 1; b_last = 1;
a = zeros(1,N+1); b = zeros(1,N);

link_coefficient = (k+1)*(pi^2)/3;

% задаем лин-триг сетку
baseSize = 2*N;
j = 1:baseSize;
alpha = 2/(2+pi);
% y0 = 0.5*y_star*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
y0_inv = 0.5*y_star_inv*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
y0 = 1./(y0_inv(end:-1:1));
x0 = log(exp(y0)-1);

Y = [3.04858735157374072
3.10123139629470845
3.15572553973967063
3.21216905487201565
3.27066844641392951
3.33133812157848519
3.39430113686362889
3.45969003116502405
3.52764775707651168
3.59832872414940130
3.67189997013431535
3.74854247890499792
3.88457320012861240
4.03084851478629425
4.18857100050081588
4.35913912165980477
4.54418880733199426
4.74564608881281291
4.96579438815648988
5.20736144669907386
5.47363292342539776
5.76860272369931248
6.09717470314748589
6.46543746772314520
6.88104516104864761
7.35375520640472313
7.89620404754672744
8.52505356705403550
9.26273270720495212
10.14016896804441537
11.20123484693265858
12.51031218428436453
14.16586266938125327
16.32641685417423005
17.95905853959165199
19.95450948843516770
22.44882317448956499
25.65579791370235796
29.93176423265275332
35.91811707918330399
44.89764634897912998
59.86352846530550664
89.79529269795825996
179.59058539591651993
]';

X = log(exp(Y)-1); 

I_base = [3.97698535404797671
5.24790607197434422
10.37466055155188727
44.18320617345877110
]';

z = (I_base*(k+1)./y0).^(2/k);

I_add = [3.97698535404797493
4.06813132442785275
4.16325209621642767
4.26260000048536458
4.36644836202137743
4.47509366525717667
4.58885798813509727
4.70809174276427456
4.83317676823611997
4.96452982870769688
5.10260657911540072
5.24790607197434600
5.50943201128268800
5.79579634852871450
6.11047068771729673
6.45757354391289873
6.84202317591757225
7.26973486066389452
7.74787820953996231
8.28521664446081374
8.89256087393179406
9.58338297466646516
10.37466055155188727
11.28805663277884186
12.35159958619992793
13.60212487164245410
15.08890751631717819
16.87921002226686085
19.06701422522117184
21.78724923820377768
25.23993274569036060
29.73314525115821638
35.76408231467603827
44.18320617345877821
50.93270097880094482
59.60968321531721159
71.08252439073743290
86.79632691341296891
109.32146015261446337
143.64630847201337360
200.68269803270720786
308.88849174547976872
567.35586326895793263
1604.54056964467781654
]';

I = (I_add*(k+1)./Y).^(2/k);

% Задаем матрицы A и B
B = (z(1,:) - ones(1,baseSize).*(y0.^2)).*y0.^(2*N) + link_coefficient*y0.^(2*N);
A = zeros(baseSize,baseSize);
for i = 1:size(A,2)
    for j = 1:size(A,2)
        if (j > 0 && j < N + 1)
            A(i,j) = (y0(i))^(2*(j-1));
        elseif (j >= N+1 && j <=baseSize-1)
            A(i,j) = -z(i)*y0(i)^(2*(j-N-1));
        elseif (j == baseSize)
            A(i,j) = -z(i)*y0(i)^(2*N-2) + (y0(i)^(2*N));
        end
    end
end
disp(A); 
disp(B');
E = A\B';
disp(E);

for j = 1:length(E)
    if (j > 0 && j <= N)
        a(j) = E(j);
    elseif (j >= N+1 && j <= baseSize)
        b(j-N) = E(j);
    end
end
a(N+1) = b(N) - link_coefficient;
% disp('lg(cond(A)):'); disp(log10(cond(A)));
disp('--------------------------------');
disp('Коэффициенты а:'); disp(a');
disp('----------------------------');
disp('Коэффициенты b:'); disp(b');
disp('----------------------------');

F_base = zeros(1,baseSize);
delta_base = zeros(1,baseSize);
for j = 1:baseSize
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*y0(j).^(2*(n-1));
    end
    for m = 1:N
        S2 = S2 + b(m).*y0(j).^(2*(m-1));
    end
    F_base(j) = (y0(j).^(2*N+2) + S1)/(y0(j).^(2*N) + S2);
    delta_base(j) = F_base(j)/z(j)-1;
end
%---------------------------------------
% Добавим вспомогательную сетку

F = zeros(1,length(Y));
delta_additional = zeros(1,length(Y));
for j = 1:length(Y)
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*Y(j).^(2*(n-1));
    end
    for m = 1:N
        S2 = S2 + b(m).*Y(j).^(2*(m-1));
    end
    F(j) = (Y(j).^(2*N+2) + S1)/(Y(j).^(2*N) + S2);
    delta_additional(j) = F(j)/I(j)-1;
%     delta_additional(j) = I(j)/F(j)-1;
end

disp('lg(dc):');disp(log10(max(abs(delta_additional))));

disp('-------------------');
disp('Экстремумы:');
disp(max(abs(delta_additional(1:11))));
disp(max(abs(delta_additional(11:22))));
disp(max(abs(delta_additional(22:33))));
disp(max(abs(delta_additional(33:44))));
disp('-------------------');

grid on, hold on
xlabel('y'); %ylabel('d*10^1^0');
plot(Y,delta_additional, 'k','linewidth', 2.5);
plot(y0,delta_base, 'k*','linewidth',5)
% axis([0 y_star -1.5*10^(-1) 1.5*10^(-1)])
% line([0;y_star],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;log(1+exp(x_star))],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;0],[-1.25; 1.35],'linewidth', 3, 'color', 'black');
% title({'Линейно-тригонометрическая сетка';['k = ', num2str(k), ', N = ', num2str(N), ', x_d_i_v = ', num2str(x_div)]})
% plot(log(1+exp(x_div)),2*10^-16,'b*');