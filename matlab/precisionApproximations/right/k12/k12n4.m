%% В этом файле значения z и I правильно аппроксимируются, т.е 
% z = (Ik/(k!*y))^(1/k)
%
clc 
clear all 
close all
format long

% коэффициент k функции Ферми-Дирака
k = 1/2;

N = 4;
% x_star = 2;
x_star = 3;
y_star = log(1+exp(x_star));
y_star_inv = 1/(y_star^2);

a = zeros(1,N+1); b = zeros(1,N);
link_coefficient = (k+1)*(pi^2)/(3*k);

% задаем лин-триг сетку
baseSize = 2*N;
j = 1:baseSize;
alpha = 2/(2+pi);
y0_inv = 0.5*y_star_inv*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
y0 = 1./sqrt(y0_inv(end:-1:1));
x0 = log(exp(y0)-1);

Y_inv = [0.00070308653158033
0.00140617306316065
0.00210925959474098
0.00281234612632131
0.00351543265790163
0.00421851918948196
0.00492160572106229
0.00562469225264261
0.00632777878422294
0.00703086531580327
0.00773395184738359
0.00885735738364478
0.00998076291990597
0.01110416845616717
0.01222757399242836
0.01335097952868955
0.01447438506495074
0.01559779060121193
0.01672119613747312
0.01784460167373431
0.01896800720999550
0.02009141274625669
0.02153651652131698
0.02298162029637727
0.02442672407143757
0.02587182784649786
0.02731693162155815
0.02876203539661845
0.03020713917167874
0.03165224294673904
0.03309734672179934
0.03454245049685963
0.03598755427191993
0.03760675987924220
0.03922596548656446
0.04084517109388673
0.04246437670120900
0.04408358230853127
0.04570278791585353
0.04732199352317580
0.04894119913049807
0.05056040473782034
0.05217961034514260
0.05379881595246487
0.05541802155978714
0.05703722716710941
0.05865643277443167
0.06027563838175394
0.06189484398907621
0.06351404959639848
0.06513325520372075
0.06675246081104302
0.06837166641836530
0.06999087202568757
0.07161007763300985
0.07305518140807014
0.07450028518313044
0.07594538895819074
0.07739049273325103
0.07883559650831133
0.08028070028337163
0.08172580405843193
0.08317090783349222
0.08461601160855252
0.08606111538361282
0.08750621915867311
0.08862962469493431
0.08975303023119550
0.09087643576745670
0.09199984130371790
0.09312324683997909
0.09424665237624029
0.09537005791250149
0.09649346344876268
0.09761686898502388
0.09874027452128507
0.09986368005754627
0.10056676658912660
0.10126985312070692
0.10197293965228725
0.10267602618386758
0.10337911271544790
0.10408219924702823
0.10478528577860856
0.10548837231018889
0.10619145884176921
0.10689454537334954
0.10759763190492987
]';

X = log(exp(Y_inv)-1); 

I_base = [7.52975462742254109
5.57341417446850951
4.49522589201812206
3.80705623887255040
3.34674487261153120
3.03909672792267793
2.84334133498542885
2.73528921225488997
]';

z = (I_base*(k+1)./y0_inv).^(2/k);

I_add = [13.35173240899768210
11.54627963278878511
10.53459410530940410
9.83746966469961670
9.30888417075295926
8.88504646544555854
8.53244536579992108
8.23133206769766446
7.96910849486025175
7.73725671424226924
7.52975462742254109
7.23817569532601990
6.98510561474007030
6.76198040964945779
6.56277762456346192
6.38310535701044479
6.21966504856520253
6.06991817394443878
5.93187063098090572
5.80392831672240561
5.68479747715814909
5.57341417446850951
5.44011908991578963
5.31664121017393221
5.20172198585320356
5.09432649125395365
4.99359376343428174
4.89880015284385628
4.80933180686977568
4.72466369087486449
4.64434337168006994
4.56797832555326533
4.49522589201812206
4.41762976689557174
4.34382146294504246
4.27347657187372665
4.20630982519048047
4.14206909520436284
4.08053049766401887
4.02149436255415971
3.96478189522192626
3.91023239101866027
3.85770089720424858
3.80705623887255040
3.75817934315081681
3.71096180934686082
3.66530468310099167
3.62111740069622945
3.57831687604168192
3.53682670787618747
3.49657648874759142
3.45750120053447541
3.41954068386677656
3.38263917090037758
3.34674487261152453
3.31552132600084404
3.28502959988610410
3.25523959087882675
3.22612296750010596
3.19765303536578527
3.16980461487501897
3.14255393004131323
3.11587850727446991
3.08975708306740504
3.06416951966775120
3.03909672792267793
3.01994947223924681
3.00109422113558111
2.98252316622386848
2.96422879936473960
2.94620389765806845
2.92844150935373149
2.91093494061580671
2.89367774307912118
2.87666370214222855
2.85988682594526988
2.84334133498542663
2.83310152340131483
2.82294882695059934
2.81288194616014975
2.80289960954794903
2.79300057283541570
2.78318361818707771
2.77344755347641181
2.76379121157683150
2.75421344967673010
2.74471314861769367
2.73528921225488642
]';

I = (I_add*(k+1)./Y_inv).^(2/k);

% Задаем матрицы A и B
B = (z(1,:) - ones(1,baseSize).*(y0_inv.^2)).*y0_inv.^(2*N);
% + link_coefficient*y0_inv.^(2*N);
A = zeros(baseSize,baseSize);
[a, b] = get_coefficients(A, B, y0_inv, z, N, k, baseSize);

disp('lg(cond(A)):'); disp(log10(cond(A)));
disp('--------------------------------');
disp('Коэффициенты а:'); disp(a);
disp('----------------------------');
disp('Коэффициенты b:'); disp(b);
disp('----------------------------');

F_base = zeros(1,baseSize);
delta_base = zeros(1,baseSize);
for j = 1:baseSize
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*y0_inv(j).^(2*(n-1));
    end
    for m = 1:N
        S2 = S2 + b(m).*y0_inv(j).^(2*(m-1));
    end
    F_base(j) = (y0_inv(j).^(2*N+2) + S1)/(y0_inv(j).^(2*N) + S2);
    delta_base(j) = F_base(j)/z(j)-1;
end
%---------------------------------------
% Добавим вспомогательную сетку

F = zeros(1,length(Y_inv));
delta_additional = zeros(1,length(Y_inv));
for j = 1:length(Y_inv)
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*Y_inv(j).^(2*(n-1));
    end
    for m = 1:N
        S2 = S2 + b(m).*Y_inv(j).^(2*(m-1));
    end
    F(j) = (Y_inv(j).^(2*N+2) + S1)/(Y_inv(j).^(2*N) + S2);
    delta_additional(j) = F(j)/I(j)-1;
end

disp('lg(dc):');disp(log10(max(abs(delta_additional))));

grid on, hold on
xlabel('y'); %ylabel('d*10^1^0');
plot(Y_inv,delta_additional, 'k','linewidth', 2.5);
plot(y0_inv,delta_base, 'k*','linewidth',5)
% axis([0 y_star -1.5*10^(-1) 1.5*10^(-1)])
line([0;y_star_inv],[0; 0],'linewidth', 2, 'color', 'black');
