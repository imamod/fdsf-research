%% В этом файле значения z и I правильно аппроксимируются, т.е 
% z = (Ik/(k!*y))^(1/k)
%
clc 
clear all 
close all
format long

% коэффициент k функции Ферми-Дирака
k = 3/2;

N = 3;
% x_star = 2;
x_star = 3;
y_star = log(1+exp(x_star));

a0 = 1; b0 = 1;
a = zeros(1,N+1); b = zeros(1,N);

% задаем лин-триг сетку
baseSize = 2*N+1;
j = 1:baseSize;
alpha = 2/(2+pi);
y0 = 0.5*y_star*(2*alpha*j/(baseSize)+(1-alpha)*(1 - cos(pi*j/(baseSize))));
x0 = log(exp(y0)-1);

Y = [0.02378563153078546
0.04757126306157091
0.07135689459235636
0.09514252612314182
0.11892815765392728
0.14271378918471272
0.16649942071549817
0.19028505224628361
0.21407068377706906
0.23785631530785450
0.26164194683863995
0.30053671654910541
0.33943148625957087
0.37832625597003633
0.41722102568050179
0.45611579539096725
0.49501056510143271
0.53390533481189817
0.57280010452236363
0.61169487423282909
0.65058964394329455
0.68948441365376001
0.73883503140239015
0.78818564915102030
0.83753626689965044
0.88688688464828058
0.93623750239691073
0.98558812014554087
1.03493873789417101
1.08428935564280104
1.13363997339143108
1.18299059114006111
1.23234120888869114
1.28542347559745096
1.33850574230621078
1.39158800901497059
1.44467027572373041
1.49775254243249023
1.55083480914125005
1.60391707585000987
1.65699934255876968
1.71008160926752950
1.76316387597628932
1.81624614268504914
1.86559676043367917
1.91494737818230920
1.96429799593093923
2.01364861367956927
2.06299923142819930
2.11234984917682933
2.16170046692545936
2.21105108467408940
2.26040170242271943
2.30975232017134946
2.35910293791997949
2.39799770763044506
2.43689247734091063
2.47578724705137621
2.51468201676184178
2.55357678647230735
2.59247155618277292
2.63136632589323849
2.67026109560370406
2.70915586531416963
2.74805063502463520
2.78694540473510077
2.81073103626588638
2.83451666779667200
2.85830229932745761
2.88208793085824322
2.90587356238902883
2.92965919391981444
2.95344482545060005
2.97723045698138566
3.00101608851217128
3.02480172004295689
3.04858735157374250
]';

X = log(exp(Y)-1); 

I_base = [0.37853332055935884
1.14536066339567855
2.43470320596249090
4.30383484784522352
6.57989041540348030
8.79598342948803236
10.35371486476145009
]';

z = (I_base./(gamma(k+1)*y0)).^(1/k);

I_add = [0.03186325949806015
0.06421852142406836
0.09707163954049108
0.13042850286621671
0.16429503531023418
0.19867719529732653
0.23358097538592615
0.26901240187825654
0.30497753442292180
0.34148246561007944
0.37853332055935884
0.44031199275997140
0.50359401712738039
0.56840671932357867
0.63477764124399461
0.70273453568938193
0.77230536092478974
0.84351827513144229
0.91640163075752312
0.99098396877398254
1.06729401284160552
1.14536066339567788
1.24698752066214014
1.35154894313022522
1.45910510107299696
1.56971655112865882
1.68344421571991343
1.80034936231667864
1.92049358257745229
2.04393877140451963
2.17074710594788245
2.30098102459244336
2.43470320596249046
2.58250266405569118
2.73448915968435058
2.89074145593972665
3.05133852203635447
3.21635950396327086
3.38588369546404566
3.55999050939182204
3.73875944948346550
3.92227008259470100
4.11060201143583459
4.30383484784521908
4.48794948859269738
4.67643292210661077
4.86934902776064593
5.06676161889379184
5.26873442635619060
5.47533108250964240
5.68661510569478690
5.90264988517557843
6.12349866657045006
6.34922453777795059
6.57989041540346964
6.76520744904444982
6.95366256777119762
7.14528631677624126
7.34010915802892328
7.53816146684313093
7.73947352856843285
7.94407553540435618
8.15199758333744917
8.36326966920066717
8.57792168785434050
8.79598342948802880
8.93102938803008861
9.06736838197880601
9.20500716420966469
9.34395247185427991
9.48421102611032474
9.62578953205754750
9.76869467847972572
9.91293313769256912
10.05851156537751123
10.20543660042132217
10.35371486476145364
]';

I = (I_add./(gamma(k+1)*Y)).^(1/k);

% Задаем матрицы A и B
B = z(1,:) - ones(1,baseSize);
A = zeros(baseSize,baseSize);
for i = 1:size(A,2)
    for j = 1:size(A,2)
        if (j>=1 && j<=N+1)
            A(i,j) = y0(i)^j;
        elseif (j >= N+2 && j <=baseSize)
            A(i,j) = -z(i)*y0(i)^(j-N-1);
        end
    end
end
disp(A); 
disp(B');
E = A\B';
disp(E);

for j = 1:length(E)
    if (j>=1 && j<=N+1)
        a(j) = E(j);
    elseif (j >= N+2 && j <=baseSize)
        b(j-N-1) = E(j);
    end
end
% a(N+1) = b(N)*gamma(k+2)^(-1/k);
disp('lg(cond(A)):'); disp(log10(cond(A)));
disp('--------------------------------');
disp('Коэффициенты а:'); disp(a);
disp('----------------------------');
disp('Коэффициенты b:'); disp(b);
disp('----------------------------');

F_base = zeros(1,baseSize);
delta_base = zeros(1,baseSize);
for j = 1:baseSize
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*y0(j).^n;
    end
    for m = 1:N
        S2 = S2 + b(m).*y0(j).^m;
    end
    F_base(j) = (a0 + S1)/(b0 + S2);
%    F_base(j) = gamma(k+1)*y0(j)*((a0 + S1)/(b0 + S2))^k;
    delta_base(j) = F_base(j)/z(j)-1;
end
%---------------------------------------
% Добавим вспомогательную сетку

F = zeros(1,length(Y));
delta_additional = zeros(1,length(Y));
for j = 1:length(Y)
    S1 = 0; S2 = 0; 
    for n = 1:N+1 
        S1 = S1 + a(n).*Y(j).^n;
    end
    for m = 1:N
        S2 = S2 + b(m).*Y(j).^m;
    end
    F(j) = (a0 + S1)/(b0 + S2);
%     F(j) = gamma(k+1)*Y(j)*((a0 + S1)/(b0 + S2))^k;
    delta_additional(j) = F(j)/I(j)-1;
end

disp('lg(dc):');disp(log10(max(abs(delta_additional))));

grid on, hold on
xlabel('y'); %ylabel('d*10^1^0');
plot(Y,delta_additional, 'k','linewidth', 2.5);
plot(y0,delta_base, 'k*','linewidth',5)
% axis([0 y_star -1.5*10^(-1) 1.5*10^(-1)])
line([0;y_star],[0; 0],'linewidth', 2, 'color', 'black');
line([0;log(1+exp(x_star))],[0; 0],'linewidth', 2, 'color', 'black');
% line([0;0],[-1.25; 1.35],'linewidth', 3, 'color', 'black');
% title({'Линейно-тригонометрическая сетка';['k = ', num2str(k), ', N = ', num2str(N), ', x_d_i_v = ', num2str(x_div)]})
% plot(log(1+exp(x_div)),2*10^-16,'b*');